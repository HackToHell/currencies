apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        applicationId "de.salomax.currencies"
        minSdkVersion 26
        targetSdkVersion 30
        // SemVer
        def major = 0
        def minor = 1
        def patch = 0
        versionCode = (major * 10000) + (minor * 100) + patch
        versionName = "$major ($major.$minor.$patch)"
    }

    signingConfigs {
        release {
            storeFile     = file(getSecret("KEYSTORE_FILE"))
            storePassword = getSecret("KEYSTORE_PASSWORD")
            keyAlias      = getSecret("KEYSTORE_KEY_ALIAS")
            keyPassword   = getSecret("KEYSTORE_KEY_PASSWORD")
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            debuggable false
            jniDebuggable false
            minifyEnabled false
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            applicationIdSuffix '.debug'
            versionNameSuffix ' [DEBUG]'
        }
    }

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }
}

dependencies {
    // kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    // support libs
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.2'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.2.0'
    implementation 'androidx.preference:preference-ktx:1.1.1'
    implementation 'com.google.android.material:material:1.2.1'
    // downloader
    def fuelVersion = "2.3.0"
    implementation "com.github.kittinunf.fuel:fuel:$fuelVersion"
    implementation "com.github.kittinunf.fuel:fuel-android:$fuelVersion"
    implementation "com.github.kittinunf.fuel:fuel-moshi:$fuelVersion"
    implementation 'com.squareup.moshi:moshi-kotlin:1.11.0'
    // math
    implementation 'org.mariuszgromada.math:MathParser.org-mXparser:4.4.2'
    // test
    testImplementation 'junit:junit:4.13.1'
}

private String getSecret(String key) {
    File secretsFile = rootProject.file("secrets.properties")
    if (secretsFile.exists()) {
        Properties props = new Properties()
        props.load(new FileInputStream(secretsFile))
        return props.getProperty(key)
    } else {
        return null
    }
}
